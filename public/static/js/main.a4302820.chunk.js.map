{"version":3,"sources":["components/recipes/RecipeCard.js","components/users/ChefCard.js","components/home/Home.js","components/navigation/NavbarSide.jsx","components/Header.js","components/sessions/Login.js","components/recipes/RecipeList.js","components/comments/Comment.js","components/comments/AddComment.js","components/recipes/RecipeDetail.js","components/users/ChefList.js","components/users/ChefDetail.js","components/sessions/SignUp.js","components/recipes/AddIngredient.js","components/recipes/RecipeCreate.js","components/users/Account.js","components/App.js","reportWebVitals.js","index.js"],"names":["RecipeCard","recipe","undefined","Card","to","id","Title","name","ChefCard","user","username","Home","currentUser","recipes","users","useState","userRecipes","setUserRecipes","randRecipes","setRandRecipes","randChefs","setRandChefs","console","log","useEffect","filter","r","i","push","Math","floor","random","length","u","map","Container","NavbarSide","Navbar","className","Nav","exact","Header","setCurrentUser","navigate","useNavigate","style","float","data-initials","first_name","last_name","Link","onClick","e","preventDefault","fetch","method","then","textDecoration","Login","onLogin","setUsername","password","setPassword","onSubmit","headers","body","JSON","stringify","res","ok","json","alert","errors","type","onChange","target","value","RecipeList","Comment","comment","handleDeleteComment","handleEditComment","showEditForm","setShowEditForm","rating","updatedRating","setUpdatedRating","updatedComment","setUpdatedComment","toggleShowEditForm","Button","Form","Array","star","color","size","can_modify_comment","showDeleteEdit","AddComment","handleAddComment","toggleCommentForm","setRating","setComment","placeholder","RecipeDetail","handleDeleteRecipe","setRecipe","showForm","setShowForm","comments","setComments","recipeId","useParams","commentId","c","filteredComments","data","recipe_ingredients","ingredient","quantity","unit","instructions","can_modify_recipe","recipe_id","window","ChefList","ChefDetail","chef","setChef","userId","bio","SignUp","firstName","setFirstName","lastName","setLastName","email","setEmail","passwordConfirmation","setPasswordConfirmation","password_confirmation","Group","Label","Control","AddIngredient","addIngredient","ingredientName","setIngredientName","setQuantity","setUnit","RecipeCreate","setRecipes","recipeName","setRecipeName","recipeIngredients","setRecipeIngredients","setInstructions","updatedIngredients","cols","Account","setUsers","App","Row","margin","Col","lg","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4302820.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Card} from 'react-bootstrap'\n\nfunction RecipeCard({recipe}) {\n\nif (recipe != undefined){\n  return (\n    <Card>\n      <Link to={`/recipes/${recipe.id}`}>\n        <Card.Title>{recipe.name}</Card.Title>\n      </Link>\n    </Card>\n  );\n}\nelse {\n  return null\n}\n\n  \n}\n\nexport default RecipeCard;","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport {Card} from 'react-bootstrap'\nfunction ChefCard({user}) {\n\n\nif (user != undefined){\n   return (\n    <Card>\n      <Link to={`/chefs/${user.id}`}>{user.username}</Link>\n    </Card>\n  );\n}\nelse{\n  return null\n}\n \n}\n\nexport default ChefCard;","import React, {useEffect, useState} from 'react';\nimport RecipeCard from '../recipes/RecipeCard'\nimport ChefCard from '../users/ChefCard'\nimport {Container} from 'react-bootstrap'\nimport '../../App.css';\n\nfunction Home({currentUser, recipes, users}) {\n  const [userRecipes,setUserRecipes]= useState([])\n  const [randRecipes, setRandRecipes]=useState('')\n  const [randChefs, setRandChefs] = useState('')\n\n  console.log(recipes)\n  useEffect(() => setUserRecipes(recipes.filter(r => r.user.id == currentUser.id)),[currentUser,recipes])\n\n  useEffect(\n    function handleRandRecipes(){\n      let r = []\n      for (let i=0; i<4; i++){\n        r.push(recipes[Math.floor(Math.random() * recipes.length)])\n      }\n      setRandRecipes(r)\n      let u =[]\n      for (let i=0; i<4; i++){\n        u.push(users[Math.floor(Math.random() * users.length)])\n      }\n      setRandChefs(u)\n    }\n  ,[recipes, users])\n\n  if (currentUser != ''){  //if a user is logged in show their recipes on the home page\n    return (\n      <div>\n        <h1>The Social Chef!</h1>\n          <h3>My Recipes</h3>\n          <ul>\n            {userRecipes.map(r => <RecipeCard recipe={r}/>)}\n          </ul>\n      </div>\n    );\n  }\n  else{ //if no one logged in render 4 random recipes and 4 random chefs\n    return (\n      <Container>\n        <Container>\n          <h1>The Social Chef!</h1>\n          <h3>Start sharing and exploring recipes by signing up or logging in!</h3>\n        </Container>\n        <Container>\n          <h2>Check out these recipes!</h2>\n          <ul>\n            {randRecipes != ''  ? randRecipes.map(r => <RecipeCard recipe={r}/>) : null}\n          </ul>\n          <h2>Some of the Chefs!</h2>\n          <ul>\n            {randChefs != ''  ? randChefs.map(u => <ChefCard user={u}/>) : null}\n          </ul>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default Home;","import React from \"react\"\nimport {NavLink} from 'react-router-dom'\nimport {Navbar, Nav, Container} from 'react-bootstrap'\n\nfunction NavbarSide({currentUser}){\n\n    if (currentUser != ''){\n        return(\n            <div>\n                <Navbar className='sidenav'>\n                    <Nav>\n                        <ul>\n                        <NavLink className='sidenavLink' to='/'>Home</NavLink>       \n                        <NavLink className='sidenavLink' to=\"/recipes\" exact=\"true\">Recipes</NavLink>\n                        <NavLink className='sidenavLink' to=\"/chefs\" exact=\"true\">Chefs</NavLink>\n                        <NavLink className='sidenavLink' to='/recipes/create' exact='true'>Share Recipe</NavLink>\n                        </ul>\n                    </Nav> \n                </Navbar>\n            </div>        \n        )\n    }\n    else{\n        return(\n            <div>\n            <Navbar className='sidenav'>\n                    <Nav>\n                        <ul>\n                        <NavLink className='sidenavLink' to='/'>Home</NavLink>       \n                        <NavLink className='sidenavLink' to=\"/recipes\" exact=\"true\">Recipes</NavLink>\n                        <NavLink className='sidenavLink' to=\"/chefs\" exact=\"true\">Chefs</NavLink>\n                        </ul>\n                    </Nav> \n                    \n                </Navbar>\n            </div>         \n        )\n    }\n   \n}\n\nexport default NavbarSide","import React from \"react\"\nimport {NavLink, useNavigate} from \"react-router-dom\"\nimport {Navbar,Container, Nav} from 'react-bootstrap'\n\nfunction Header({currentUser, setCurrentUser}){\n    const navigate = useNavigate()\n\n    function logout(e){\n        e.preventDefault()\n        fetch('/api/logout',{\n            method: 'DELETE'\n        })\n        .then(setCurrentUser('')).then(navigate('/'))       //when session userid is deleted we want to set current user back to default of ''\n    }\n\n    if (currentUser !== ''){\n        return(\n            <Navbar>\n                <Container>\n                    <h3 style={{float: \"left\"}}>Welcome {currentUser.username}</h3>\n                    <div style={{float: \"right\"}} data-initials={currentUser.first_name[0] + currentUser.last_name[0]}></div>\n                    <Nav.Link style={{float: \"right\"}} onClick={logout}>Logout</Nav.Link>\n                    <NavLink to='/account' style={{textDecoration: \"none\"}}>Account</NavLink>\n                </Container>\n            </Navbar>\n            \n        )\n    }\n    else{\n       return(\n        <div>\n            <NavLink to='/login'>Login</NavLink>\n            <NavLink to='/signup'>Sign Up</NavLink>\n        </div>\n    ) \n    }\n    \n}\n\nexport default Header","import React, {useState} from 'react';\nimport {useNavigate} from 'react-router-dom'\nfunction Login({onLogin}) {\nconst[username,setUsername]=useState('')\nconst[password,setPassword]=useState('')\nconst navigate = useNavigate()\n\nfunction onSubmit(e){\n  e.preventDefault()\n\n  fetch('/api/login',{\n    method: 'POST',\n    headers: {\"Content-Type\": 'application/json'},\n    body: JSON.stringify({\n      username: username,\n      password: password,\n    })\n  })\n    .then(res => {\n      if(res.ok){\n        res.json().then(user => onLogin(user))\n        navigate('/') \n      }\n      else{\n        res.json().then(res => alert(res.errors))\n      }\n    }\n  )\n}\n  return (\n    <div>\n      <h1>Login</h1>\n        \n        <form onSubmit={onSubmit}> \n            <label>username: </label>\n            <input type='text' onChange={e => setUsername(e.target.value)}></input>\n            <label>password: </label>\n            <input type='password' onChange={e => setPassword(e.target.value)}></input>\n            <button>login</button>\n        </form>\n    </div>\n  );\n}\nexport default Login;","import React from 'react';\nimport RecipeCard from './RecipeCard'\n\nfunction RecipeList({recipes}) {\n\n  return (\n    <div >\n      <h1>Recipe List</h1>\n        \n      <ul>\n        {recipes.map(recipe => {\n          return <RecipeCard key={recipe.id} recipe={recipe}/> \n        })\n        }\n      </ul>\n    </div>\n  );\n}\n\nexport default RecipeList;","import React, {useEffect, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport {Card, Button, Form} from 'react-bootstrap'\nimport {FaStar} from 'react-icons/fa'\n\n\nfunction Comment({comment, handleDeleteComment, handleEditComment}) {\n  const[showEditForm, setShowEditForm] = useState(false)\n  const[updatedRating,setUpdatedRating]=useState(comment.rating)\n  const[updatedComment,setUpdatedComment]=useState(comment.comment)\n\n  //using this to update state when add comment is triggered\n  useEffect(()=>{\n    setUpdatedComment(comment.comment)\n    setUpdatedRating(comment.rating)\n  },[comment])\n\n\n\n    function showDeleteEdit(){\n      if ( comment.can_modify_comment){\n        return (\n          <>\n            <Button onClick={(e) => handleDeleteComment(e,comment.id)}>Delete</Button>\n            <Button onClick={(e) => toggleShowEditForm(e)}>Edit</Button>\n          </>\n        )\n      }}\n      function toggleShowEditForm(){\n        setShowEditForm(!showEditForm)\n      }\n      \n      \n\n      if (showEditForm){\n        return (\n          <Card>\n            <Button onClick={toggleShowEditForm}>Cancel Edit</Button>\n            <Form onSubmit={(e)=> {\n              handleEditComment(e,comment.id, updatedComment,updatedRating)\n              toggleShowEditForm()\n              } \n            }>\n              <input type=\"text\" value={updatedComment} onChange={(e)=> setUpdatedComment(e.target.value)}></input>\n                \n                {\n                    [...Array(5)].map((star, i)=>{\n                        i+=1\n                        return (\n                        <label>\n                            <input type=\"radio\" name=\"rating\" value={i} onClick={()=>setUpdatedRating(i)} />\n                            <FaStar className=\"star\" color={i <= updatedRating ? \"#ffc107\":\"\"}size={20} />\n                        </label>\n                        )\n                    }) \n                }\n                <Button type='submit' >Submit Edit</Button>\n            </Form>\n          <Card>\n                <p>{updatedComment}</p>\n                <p>from: {comment.user.username}</p>\n                <div>\n                  {\n                    [...Array(5)].map((star, i)=>{\n                        return (\n                        <label>\n                            <input type=\"radio\" name=\"rating\" value={i} />\n                            <FaStar  color={i < updatedRating ? \"#ffc107\":\"\"}size={20} />\n                        </label>\n                        )\n                    }) \n                  }\n                </div>       \n            </Card>\n          </Card>\n          \n          )\n      } else {\n        return (\n          <Card>\n              {showDeleteEdit()}\n              <p>{updatedComment}</p>\n              <p>from: {comment.user.username}</p>\n              <div>\n                {\n                  [...Array(5)].map((star, i)=>{\n                      return (\n                      <label>\n                          <input type=\"radio\" name=\"rating\" value={i} />\n                          <FaStar  color={i < updatedRating ? \"#ffc107\":\"\"}size={20} />\n                      </label>\n                      )\n                  }) \n                }\n              </div>       \n          </Card>\n        );\n      }\n    \n}\n\nexport default Comment;","import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport {Card, Button, Form} from 'react-bootstrap'\nimport {FaStar} from 'react-icons/fa'\n\nfunction AddComment({handleAddComment, toggleCommentForm}) {\nconst[rating,setRating]=useState(null)\nconst[comment,setComment]=useState(null)\n\nconsole.log(comment)\n  return (\n    <Card>\n      <Form onSubmit={(e)=> handleAddComment(e,comment,rating)}>\n        <input type=\"text\" placeholder=\"add comment here\" onChange={(e)=> setComment(e.target.value)}></input>\n          \n          {\n              [...Array(5)].map((star, i)=>{\n                  i+=1\n                  return (\n                  <label>\n                      <input type=\"radio\" name=\"rating\" value={i} onClick={()=>setRating(i)} />\n                      <FaStar className=\"star\" color={i <= rating ? \"#ffc107\":\"\"}size={20} />\n                  </label>\n                  )\n              }) \n          }\n          <Button type='submit'>Submit Comment</Button>\n          <Button onClick={() => toggleCommentForm()}>Cancel</Button>\n      </Form>\n        \n                \n    </Card>\n  );\n}\n\nexport default AddComment;","import React, {useEffect, useState} from 'react';\nimport {useParams, useNavigate} from 'react-router-dom'\nimport {Button} from 'react-bootstrap'\nimport Comment from '../comments/Comment'\nimport AddComment from '../comments/AddComment'\n\nfunction RecipeDetail({currentUser, handleDeleteRecipe}) {\n  const[recipe,setRecipe]=useState('')\n  const[showForm, setShowForm]=useState(0)\n  const[comments,setComments]=useState([])\n \n  \n  let recipeId = useParams().id\n  \n  useEffect(()=>{\n    fetch(`/api/recipes/${recipeId}`)\n    .then((res => res.json()))\n    .then((data)=> {\n      setRecipe(data)\n      setComments(data.comments)\n    } )\n  },[])\n  \n  function toggleCommentForm(){\n    setShowForm(!showForm)\n  }\n  function handleAddComment(e,comment,rating){\n    e.preventDefault()\n    console.log(comment)\n    fetch('/api/comments',{\n      method: 'POST',\n      headers: {\"Content-Type\": 'application/json'},\n      body: JSON.stringify({\n        recipe_id: recipe.id,\n        comment: comment,\n        rating: rating\n      }) \n    })\n    .then(res=>{\n      if(res.ok) {\n        res.json().then(res=> setComments([res,...comments]))\n        toggleCommentForm() //hides comment form after they submit their comment\n        }\n        else{\n          res.json().then(res=>window.alert(res.comment))\n        }\n      })\n    }\n\n  // delete comment\n  function handleDeleteComment(e,commentId){\n    e.preventDefault()\n    fetch(`/api/comments/${commentId}`,{\n      method: 'DELETE',\n    })\n    .then(res=>{\n      if (res.ok){\n        setComments(comments.filter(c=> c.id != commentId)) //r.id of type number while recipeId type string \n        \n      }\n    })\n  }\n\n  // Edit comment\n  function handleEditComment(e,commentId, updatedComment, updatedRating){\n    e.preventDefault()\n    fetch(`/api/comments/${commentId}`, {\n      method: 'PATCH',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        comment: updatedComment,\n        rating: updatedRating\n      })\n    })\n    .then(res=> {\n      if(res.ok){\n        res.json().then(updatedComment => {\n          console.log(commentId)\n          console.log(updatedComment)\n          let filteredComments = comments.filter(c => c.id != commentId)\n          setComments([updatedComment,...filteredComments])\n        })\n      }\n    })\n  }\n  \n  \n  if(recipe != ''){\n    return (\n    <div>\n      <h1>{recipe.name}</h1>\n      <h3>By: {recipe.user.username} </h3>\n                <h3>Ingredients</h3>\n                    <ul>\n                        {recipe.recipe_ingredients.map((ingredient)=>{\n                            return <li key={ingredient.id}>{ingredient.quantity + ' ' + ingredient.unit + ' ' + ingredient.ingredient.name}</li>\n                        })}\n                    </ul>\n                <h3>Cooking Instructions</h3>\n                <p>{recipe.instructions}</p>\n                {recipe.can_modify_recipe? <Button onClick={e=> handleDeleteRecipe(e, recipe.id)}>Delete Recipe</Button>:null}\n                <h3>Comments</h3>\n                {currentUser != '' ? <button type='button' onClick={toggleCommentForm}>Add Comment</button> : \"\"}\n                {showForm == 1 ? <AddComment handleAddComment={handleAddComment} toggleCommentForm={toggleCommentForm}/>:null}\n                       \n                <ul>\n\n                  {comments.map((comment) => {\n                    \n                    return <Comment currentUser={currentUser} comment={comment} handleDeleteComment={handleDeleteComment} handleEditComment={handleEditComment}/>\n                  })}\n                </ul>\n        \n    </div>\n  );\n  }\n  else{return <p>loading...</p>}\n  \n}\n\nexport default RecipeDetail;","import React from 'react';\nimport ChefCard from './ChefCard'\nfunction ChefList({users}) {\n\n  return (\n    <div>\n      <h1>Chef List</h1>\n      <ul>\n        {users.map(user => {\n          return <ChefCard key={user.id} user={user}/>  \n        })\n        }\n      </ul>\n        \n    </div>\n  );\n}\n\nexport default ChefList;","import React, {useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom'\nimport RecipeCard from '../recipes/RecipeCard'\n\nfunction ChefDetail() {\nconst[chef, setChef]=useState('')\nlet userId = useParams().id\n\n\n  useEffect(()=> {\n    fetch(`/api/chefs/${userId}`)\n    .then((res) => res.json())\n    .then((data) => setChef(data))\n  },[])\nconsole.log(chef.recipes)\n\nif (chef != ''){\n   return (\n    <div>\n      <h1>{chef.username}</h1>\n      <p>{chef.bio}</p>\n      <ul>\n        {chef.recipes != undefined ?chef.recipes.map((recipe)=>{\n          return <RecipeCard recipe={recipe}/>\n        }):null}\n      </ul>\n        \n        \n    </div>\n  );\n}\n else {return <p>loading</p>}\n}\n\nexport default ChefDetail;","import React, {useState} from 'react';\nimport {Form, Container, Button} from 'react-bootstrap';\nimport {useNavigate} from 'react-router-dom'\n\nfunction SignUp({onLogin}) {\n    const[firstName, setFirstName]=useState('')\n    const[lastName, setLastName]=useState('')\n    const[email, setEmail]=useState('')\n    const[username,setUsername]=useState('')\n    const[password,setPassword]=useState('')\n    const[passwordConfirmation,setPasswordConfirmation]=useState('')\n\n    const navigate = useNavigate()\n\n    function onSubmit(e){\n    e.preventDefault()\n    \n    fetch('/api/users',{\n        method: 'POST',\n        headers: {\"Content-Type\": 'application/json'},\n        body: JSON.stringify({\n        username: username,\n        password: password,\n        first_name: firstName,\n        last_name: lastName,\n        email: email,\n        password_confirmation: passwordConfirmation,\n        })})\n        .then(\n            res =>{\n                if(res.ok){\n                    res.json().then(user => onLogin(user))\n                    navigate('/')\n                }  \n            })\n               \n    }\n\n  return (\n    <Container>\n      <Form className='signup' onSubmit={onSubmit}>  \n      <h1>Sign Up!</h1>\n        <Form.Group>\n          <Form.Label>first name: </Form.Label>\n          <Form.Control type='text' onChange={e => setFirstName(e.target.value)}></Form.Control>\n        </Form.Group>\n          <Form.Label>last name: </Form.Label>\n          <Form.Control type='text' onChange={e => setLastName(e.target.value)}></Form.Control>\n          <Form.Label>email: </Form.Label>\n          <Form.Control type='email' onChange={e => setEmail(e.target.value)}></Form.Control>\n          <Form.Label>username: </Form.Label>\n          <Form.Control type='text' onChange={e => setUsername(e.target.value)}></Form.Control>\n          <Form.Label>password: </Form.Label>\n          <Form.Control type='password' onChange={e => setPassword(e.target.value)}></Form.Control>\n        <Form.Group>\n          <Form.Label>confirm password: </Form.Label>\n          <Form.Control type='password' onChange={e => setPasswordConfirmation(e.target.value)}></Form.Control>\n        </Form.Group>\n        <Button type='signup'>sign up</Button>\n    </Form>\n\n    </Container>\n    \n    \n  );\n}\n\nexport default SignUp;","import React, {useState} from \"react\";\n\nfunction AddIngredient({addIngredient}){\n    const[ingredientName,setIngredientName]=useState('')\n    const[quantity,setQuantity]=useState('')\n    const[unit,setUnit]=useState('')\n    \n    \n    function handleAddIngredient(e){\n        e.preventDefault()\n        addIngredient(ingredientName, quantity, unit)\n    }\n    \n    return(\n        <div>\n            \n                <label>Ingredient: </label>\n                <input type=\"text\" onChange={(e)=>setIngredientName(e.target.value)}></input>\n                <label>Quantity:</label>\n                <input type=\"text\" onChange={(e)=>setQuantity(e.target.value)}></input>\n                <label>Unit:</label>\n                <input type='text' onChange={(e)=>setUnit(e.target.value)}></input>\n                <button type=\"submit\" onClick={handleAddIngredient}>Add Ingredient</button>\n                \n        </div>\n    );\n}\n\nexport default AddIngredient;","import React, {useState, useEffect}from 'react'\nimport {useNavigate} from 'react-router-dom'\nimport {Container, Form, Card} from 'react-bootstrap'\nimport AddIngredient from './AddIngredient'\n\nfunction RecipeCreate({recipes, setRecipes}){\n    \n    const[recipeName,setRecipeName]=useState('')\n    const[recipeIngredients,setRecipeIngredients]=useState([])\n    const[instructions,setInstructions]=useState('')\n    const navigate = useNavigate()\n    \n    function createRecipe(e){\n        e.preventDefault()\n        fetch('/api/recipes', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                name: recipeName,\n                recipe_ingredients: recipeIngredients,\n                instructions: instructions\n            }),\n        })\n        .then((res)=>{\n            if (res.ok){\n                \n                res.json().then((recipe)=> {\n                    setRecipes([...recipes,recipe])\n                    navigate(`/recipes/${recipe.id}`)\n                    }) //updates recipes state so page rerenders with new recipe in the list\n                \n            }\n            else{\n                res.json().then(res=>window.alert(res.errors))\n            }\n        })\n        }\n    \n        function addIngredient(ingredientName,quantity,unit){\n            let ingredient = {ingredient:ingredientName, quantity:quantity, unit: unit}\n            let updatedIngredients = [...recipeIngredients,ingredient]\n            setRecipeIngredients(updatedIngredients)\n        }\n        console.log(recipeIngredients)\n    return (\n        <Container>\n            <Card>\n            <h1>Create New Recipe</h1>\n                <Form>\n                    \n                    <label>Recipe Name</label>\n                    <input type=\"text\" onChange={(e)=>setRecipeName(e.target.value)}></input>\n                </Form>\n            </Card>\n            <Card>\n                <Form>\n                    <h2>Ingredients</h2>\n                    <AddIngredient addIngredient={addIngredient}/>\n                    <ul>\n                    {recipeIngredients.length>0 && \n                        recipeIngredients.map((ingredient)=>{\n                            return <li key={ingredient.ingredient}>{ingredient.ingredient} {ingredient.quantity} {ingredient.unit}</li>\n                        }) \n                    }\n                    </ul>\n                </Form>\n            </Card>\n                <Card>\n                    <Form>\n                        <h2>Instructions</h2>\n                        <label>Cooking Instructions: </label>\n                        <textarea type='paragraph_text' cols='80' onChange={(e)=>setInstructions(e.target.value)}></textarea>\n                    </Form>\n                </Card>\n                \n            <button type='submit' onClick={createRecipe}>Submit Recipe</button>          \n        \n        </Container>\n    )\n}\n\nexport default RecipeCreate","import React, {useEffect, useState} from 'react';\nimport {Container, Button} from 'react-bootstrap'\nimport {useNavigate} from 'react-router-dom'\n\n\nfunction Account({currentUser, setCurrentUser,users, setUsers}) {\n\nconst navigate = useNavigate()\n\nfunction deleteAccount(){\n    fetch(`/api/users/${currentUser.id}`,{\n        method: 'DELETE'\n    })\n    .then(res => {\n        if (res.ok){\n            setCurrentUser('')\n            res.json().then(users => setUsers(users))\n            navigate('/')\n        }\n    })\n    \n}\n\n    return(\n        <Container>\n            <h1>Welcome {currentUser.first_name}</h1>\n            <Button onClick={deleteAccount}>Delete Account</Button>\n\n        </Container>\n    )\n}\n\nexport default Account;","import React, {useEffect, useState} from 'react';\nimport {Routes, Route, useNavigate} from 'react-router-dom'\nimport '../App.css';\nimport Home from './home/Home'\nimport NavbarSide from './navigation/NavbarSide';\nimport Header from './Header'\nimport Login from './sessions/Login'\nimport RecipeList from './recipes/RecipeList'\nimport RecipeDetail from './recipes/RecipeDetail'\nimport ChefList from './users/ChefList'\nimport ChefDetail from './users/ChefDetail'\nimport SignUp from './sessions/SignUp'\nimport RecipeCreate from './recipes/RecipeCreate'\nimport Account from './users/Account'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Container,Row, Col} from 'react-bootstrap'\n\n\nfunction App() {\n  const [users, setUsers]=useState([])\n  const [recipes, setRecipes]=useState([])\n  const [currentUser, setCurrentUser] = useState('')\n  const navigate = useNavigate()\n\n  //initial fetch of data\n  useEffect(() =>{\n    fetch(\"/api/users\")\n    .then(res => res.json())\n    .then(data => setUsers(data))\n    .then(()=>fetch(\"/api/recipes\"))\n    .then(res => res.json())\n    .then(data=>setRecipes(data))\n  },[])\n  //check to see if the user is already logged in when page refreshes or they leave and revisit\n  useEffect(()=>{\n    fetch('/api/auth')\n    .then(res => {\n      if (res.ok){\n        res.json().then(user => setCurrentUser(user))\n      }\n    })\n  },[])\n  \n  function handleDeleteRecipe(e,recipeId){\n    e.preventDefault()\n    fetch(`/api/recipes/${recipeId}`,{\n      method: 'DELETE',\n    })\n    .then(res=>{\n      if (res.ok){\n        setRecipes(recipes.filter(r=> r.id != recipeId)) //r.id of type number while recipeId type string \n        navigate('/recipes')\n      }\n    })\n  }\n  \n  return (\n    <div className=\"main\">\n      <Container>\n        <Row>\n          <Header currentUser={currentUser} setCurrentUser={setCurrentUser}/>\n        </Row> \n      </Container>\n      \n      <Container margin='10px'>\n        <Row>\n          <Col lg={3}>\n          <NavbarSide currentUser={currentUser}/>\n        </Col>\n        <Col lg={true}>\n          <Routes>\n            <Route path='/' element={<Home currentUser={currentUser} recipes={recipes} users={users}/>}/>\n            <Route path='/recipes' element={<RecipeList recipes={recipes}/>}/>\n            <Route path='/recipes/:id' element={<RecipeDetail currentUser={currentUser} handleDeleteRecipe={handleDeleteRecipe}/>}/>\n            <Route path='/chefs' element={<ChefList users={users}/>}/>\n            <Route path='/chefs/:id' element={<ChefDetail/>}/>\n            <Route path='/login' element={<Login onLogin={setCurrentUser}/>}/>\n            <Route path='/signup' element={<SignUp onLogin={setCurrentUser}/>}/>\n            <Route path='/recipes/create' element={<RecipeCreate recipes ={recipes} setRecipes={setRecipes}/>}/>\n            <Route path='/account' element={<Account currentUser={currentUser} setCurrentUser={setCurrentUser} users={users} setUsers={setUsers}/>}/>\n            \n          </Routes>\n          </Col>\n        </Row>\n      </Container>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
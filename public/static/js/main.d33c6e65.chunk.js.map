{"version":3,"sources":["components/recipes/RecipeCard.js","components/users/ChefCard.js","components/Home.js","components/navigation/NavbarSide.js","components/Header.js","components/sessions/Login.js","components/recipes/RecipeList.js","components/recipes/Comment.js","components/recipes/AddComment.js","components/recipes/RecipeDetail.js","components/users/ChefList.js","components/users/ChefDetail.js","components/sessions/SignUp.js","components/recipes/AddIngredient.js","components/recipes/RecipeCreate.js","components/users/Account.js","components/App.js","reportWebVitals.js","index.js"],"names":["RecipeCard","recipe","console","log","undefined","Card","to","id","Title","name","ChefCard","user","username","Home","currentUser","recipes","users","useState","userRecipes","setUserRecipes","randRecipes","setRandRecipes","randChefs","setRandChefs","useEffect","filter","r","i","push","Math","floor","random","length","u","map","Container","NavbarSide","Navbar","className","Nav","exact","Header","setCurrentUser","navigate","useNavigate","style","float","data-initials","first_name","last_name","Link","onClick","e","preventDefault","fetch","method","then","textDecoration","Login","onLogin","setUsername","password","setPassword","onSubmit","headers","body","JSON","stringify","res","ok","json","alert","errors","type","onChange","target","value","RecipeList","Comment","comment","Array","star","color","rating","size","AddComment","handleAddComment","setRating","setComment","Form","placeholder","Button","RecipeDetail","handleDeleteRecipe","setRecipe","showForm","setShowForm","comments","setComments","recipeId","useParams","toggleCommentForm","data","recipe_ingredients","ingredient","quantity","unit","instructions","showDeleteEdit","recipe_id","user_id","ChefList","ChefDetail","chef","setChef","userId","bio","SignUp","firstName","setFirstName","lastName","setLastName","email","setEmail","passwordConfirmation","setPasswordConfirmation","password_confirmation","Group","Label","Control","AddIngredient","addIngredient","ingredientName","setIngredientName","setQuantity","setUnit","RecipeCreate","setRecipes","recipeName","setRecipeName","recipeIngredients","setRecipeIngredients","setInstructions","updatedIngredients","cols","Account","App","setUsers","Row","margin","Col","lg","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d33c6e65.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Card} from 'react-bootstrap'\n\nfunction RecipeCard({recipe}) {\n\nconsole.log(recipe)\n\nif (recipe != undefined){\n  return (\n    <Card>\n     \n      <Link to={`/recipes/${recipe.id}`}>\n        <Card.Title>{recipe.name}</Card.Title>\n      </Link>\n      \n        \n    </Card>\n  );\n}\nelse {\n  return null\n}\n\n  \n}\n\nexport default RecipeCard;","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport {Card} from 'react-bootstrap'\nfunction ChefCard({user}) {\n\nconsole.log(user)\n\nif (user != undefined){\n   return (\n    <Card>\n      \n      <Link to={`/chefs/${user.id}`}>{user.username}</Link>\n    </Card>\n  );\n}\nelse{\n  return null\n}\n \n}\n\nexport default ChefCard;","import React, {useEffect, useState} from 'react';\nimport RecipeCard from './recipes/RecipeCard'\nimport ChefCard from './users/ChefCard'\nimport {Container} from 'react-bootstrap'\nimport '../App.css';\n\nfunction Home({currentUser, recipes, users}) {\n  const [userRecipes,setUserRecipes]= useState([])\n  const [randRecipes, setRandRecipes]=useState('')\n  const [randChefs, setRandChefs] = useState('')\n\n  useEffect(() => setUserRecipes(recipes.filter(r => r.user.id == currentUser.id)),[currentUser,recipes])\n\n  useEffect(\n    function handleRandRecipes(){\n      let r = []\n      for (let i=0; i<4; i++){\n        r.push(recipes[Math.floor(Math.random() * recipes.length)])\n      }\n      setRandRecipes(r)\n      let u =[]\n      for (let i=0; i<4; i++){\n        u.push(users[Math.floor(Math.random() * users.length)])\n      }\n      setRandChefs(u)\n    }\n  ,[recipes, users])\n\n  if (currentUser != ''){  //if a user is logged in show their recipes on the home page\n    return (\n      <div>\n        <h1>The Social Chef!</h1>\n          <h3>My Recipes</h3>\n          <ul>\n            {userRecipes.map(r => <RecipeCard recipe={r}/>)}\n          </ul>\n      </div>\n    );\n  }\n  else{ //if no one logged in render 4 random recipes and 4 random chefs\n    return (\n      <Container>\n        <Container>\n          <h1>The Social Chef!</h1>\n          <h3>Start sharing and exploring recipes by signing up or logging in!</h3>\n        </Container>\n        <Container>\n          <h2>Check out these recipes!</h2>\n          <ul>\n            {randRecipes != ''  ? randRecipes.map(r => <RecipeCard recipe={r}/>) : null}\n          </ul>\n          <h2>Some of the Chefs!</h2>\n          <ul>\n            {randChefs != ''  ? randChefs.map(u => <ChefCard user={u}/>) : null}\n          </ul>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default Home;","import React from \"react\"\nimport {NavLink} from 'react-router-dom'\nimport {Navbar, Nav, Container} from 'react-bootstrap'\n\nfunction NavbarSide({currentUser}){\n\n    if (currentUser != ''){\n        return(\n            <div>\n                <Navbar className='sidenav'>\n                    <Nav>\n                        <ul>\n                        <NavLink className='sidenavLink' to='/'>Home</NavLink>       \n                        <NavLink className='sidenavLink' to=\"/recipes\" exact=\"true\">Recipes</NavLink>\n                        <NavLink className='sidenavLink' to=\"/chefs\" exact=\"true\">Chefs</NavLink>\n                        <NavLink className='sidenavLink' to='/recipes/create' exact='true'>Share Recipe</NavLink>\n                        </ul>\n                    </Nav> \n                </Navbar>\n            </div>        \n        )\n    }\n    else{\n        return(\n            <div>\n            <Navbar className='sidenav'>\n                    <Nav>\n                        <ul>\n                        <NavLink className='sidenavLink' to='/'>Home</NavLink>       \n                        <NavLink className='sidenavLink' to=\"/recipes\" exact=\"true\">Recipes</NavLink>\n                        <NavLink className='sidenavLink' to=\"/chefs\" exact=\"true\">Chefs</NavLink>\n                        </ul>\n                    </Nav> \n                    \n                </Navbar>\n            </div>         \n        )\n    }\n   \n}\n\nexport default NavbarSide","import React from \"react\"\nimport {NavLink, useNavigate} from \"react-router-dom\"\nimport {Navbar,Container, Nav} from 'react-bootstrap'\n\nfunction Header({currentUser, setCurrentUser}){\n    const navigate = useNavigate()\n\n    function logout(e){\n        e.preventDefault()\n        console.log('yeet')\n        fetch('/logout',{\n            method: 'DELETE'\n        })\n        .then(setCurrentUser('')).then(navigate('/'))       //when session userid is deleted we want to set current user back to default of ''\n    }\n\n    if (currentUser !== ''){\n        return(\n            <Navbar>\n                <Container>\n                    <h3 style={{float: \"left\"}}>Welcome {currentUser.username}</h3>\n                    <div style={{float: \"right\"}} data-initials={currentUser.first_name[0] + currentUser.last_name[0]}></div>\n                    <Nav.Link style={{float: \"right\"}} onClick={logout}>Logout</Nav.Link>\n                    <NavLink to='/account' style={{textDecoration: \"none\"}}>Account</NavLink>\n                </Container>\n            </Navbar>\n            \n        )\n    }\n    else{\n       return(\n        <div>\n            <NavLink to='/login'>Login</NavLink>\n            <NavLink to='/signup'>Sign Up</NavLink>\n        </div>\n    ) \n    }\n    \n}\n\nexport default Header","import React, {useState} from 'react';\nimport {useNavigate} from 'react-router-dom'\n\nfunction Login({onLogin}) {\nconst[username,setUsername]=useState('')\nconst[password,setPassword]=useState('')\nconst navigate = useNavigate()\n\nfunction onSubmit(e){\n  e.preventDefault()\n  console.log('yeet')\n  fetch('/api/sessions',{\n    method: 'POST',\n    headers: {\"Content-Type\": 'application/json'},\n    body: JSON.stringify({\n      username: username,\n      password: password,\n    })\n  })\n    .then(res => {\n      if(res.ok){\n        res.json().then(user => onLogin(user))\n        navigate('/') \n      }\n      else{\n        res.json().then(res => alert(res.errors))\n      }\n    }\n  )\n\n}\n\n  return (\n    <div>\n      <h1>Login</h1>\n        \n        <form onSubmit={onSubmit}> \n            <label>username: </label>\n            <input type='text' onChange={e => setUsername(e.target.value)}></input>\n            <label>password: </label>\n            <input type='text' onChange={e => setPassword(e.target.value)}></input>\n            <button>login</button>\n        </form>\n    </div>\n  );\n}\n\nexport default Login;","import React from 'react';\nimport RecipeCard from './RecipeCard'\n\nfunction RecipeList({recipes}) {\n\nconsole.log(recipes)\n  return (\n    <div >\n      <h1>Recipe List</h1>\n        \n      <ul>\n        {recipes.map(recipe => {\n          return <RecipeCard recipe={recipe}/> \n        })\n        }\n      </ul>\n    </div>\n  );\n}\n\nexport default RecipeList;","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport {Card} from 'react-bootstrap'\nimport {FaStar} from 'react-icons/fa'\n\nfunction Comment({comment}) {\n\nconsole.log(comment)\n\n  return (\n    <Card>\n     \n     \n        <p>{comment.comment}</p>\n        <p>from: {comment.user.username}</p>\n        <div>\n          {\n            [...Array(5)].map((star, i)=>{\n                return (\n                <label>\n                    <input type=\"radio\" name=\"rating\" value={i} />\n                    <FaStar  color={i < comment.rating ? \"#ffc107\":\"\"}size={20} />\n                </label>\n                \n                )\n            }) \n          }\n        </div>\n        \n        \n                \n    </Card>\n  );\n}\n\nexport default Comment;","import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport {Card, Button, Form} from 'react-bootstrap'\nimport {FaStar} from 'react-icons/fa'\n\nfunction AddComment({handleAddComment}) {\nconst[rating,setRating]=useState(null)\nconst[comment,setComment]=useState(null)\n\n\n  return (\n    <Card>\n      <Form onSubmit={(e)=> handleAddComment(e,comment,rating)}>\n        <input type=\"text\" placeholder=\"add comment here\" onChange={(e)=> setComment(e.target.value)}></input>\n          \n          {\n              [...Array(5)].map((star, i)=>{\n                  i+=1\n                  return (\n                  <label>\n                      <input type=\"radio\" name=\"rating\" value={i} onClick={()=>setRating(i)} />\n                      <FaStar className=\"star\" color={i <= rating ? \"#ffc107\":\"\"}size={20} />\n                  </label>\n                  )\n              }) \n          }\n          <Button type='submit'>Submit Comment</Button>\n      </Form>\n        \n                \n    </Card>\n  );\n}\n\nexport default AddComment;","import React, {useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom'\nimport {Button} from 'react-bootstrap'\nimport Comment from './Comment'\nimport AddComment from './AddComment'\n\nfunction RecipeDetail({currentUser, handleDeleteRecipe}) {\n  const[recipe,setRecipe]=useState('')\n  const[showForm, setShowForm]=useState(0)\n  const[comments,setComments]=useState([])\n  \n  let recipeId = useParams().id\n  \n  useEffect(()=>{\n    fetch(`/api/recipes/${recipeId}`)\n    .then((res => res.json()))\n    .then((data)=> {\n      setRecipe(data)\n      setComments(data.comments)\n    } )\n  },[])\n  \n  function toggleCommentForm(){\n    setShowForm(!showForm)\n  }\n  function handleAddComment(e,comment,rating){\n    e.preventDefault()\n    fetch('/api/comments',{\n      method: 'POST',\n      headers: {\"Content-Type\": 'application/json'},\n      body: JSON.stringify({\n        recipe_id: recipe.id,\n        user_id: currentUser.id,\n        comment: comment,\n        rating: rating\n      }) \n    })\n    .then(res=>{\n      if(res.ok) {\n        res.json().then(res=> setComments([res,...comments]))\n      }})\n    toggleCommentForm() //hides comment form after they submit their comment\n    }\n  \n  //show delete and edit buttons if user logged in was the creator of the recipe\n  function showDeleteEdit(){\n    if (recipe.user.username == currentUser.username){\n      return <Button onClick={(e) => handleDeleteRecipe(e,recipeId)}>Delete</Button>\n    }\n  }\n  \n  if(recipe != ''){\n    return (\n    <div>\n      <h1>{recipe.name}</h1>\n      <h3>By: {recipe.user.username} </h3>\n                <h3>Ingredients</h3>\n                    <ul>\n                        {recipe.recipe_ingredients.map((ingredient)=>{\n                            return <li key={ingredient.id}>{ingredient.quantity + ' ' + ingredient.unit + ' ' + ingredient.ingredient.name}</li>\n                        })}\n                    </ul>\n                <h3>Cooking Instructions</h3>\n                <p>{recipe.instructions}</p>\n                {showDeleteEdit()}\n                <h3>Comments</h3>\n                {currentUser != '' ? <button type='button' onClick={toggleCommentForm}>Add Comment</button> : \"\"}\n                {showForm == 1 ? <AddComment recipe={recipe} currentUser={currentUser} handleAddComment={handleAddComment}/>:null}\n                        \n                <ul>\n                  {comments.map((comment) => {\n                    return <Comment comment={comment}/>\n                  })}\n                </ul>\n        \n    </div>\n  );\n  }\n  else{return <p>loading...</p>}\n  \n}\n\nexport default RecipeDetail;","import React from 'react';\nimport ChefCard from './ChefCard'\nfunction ChefList({users}) {\n\nconsole.log(users)\n  return (\n    <div>\n      <h1>Chef List</h1>\n      <ul>\n        {users.map(user => {\n          return <ChefCard user={user}/>  \n        })\n        }\n      </ul>\n        \n    </div>\n  );\n}\n\nexport default ChefList;","import React, {useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom'\nimport RecipeCard from '../recipes/RecipeCard'\n\nfunction ChefDetail() {\nconst[chef, setChef]=useState('')\nlet userId = useParams().id\n\n\n  useEffect(()=> {\n    fetch(`/api/chefs/${userId}`)\n    .then((res) => res.json())\n    .then((data) => setChef(data))\n  },[])\nconsole.log(chef.recipes)\n\nif (chef != ''){\n   return (\n    <div>\n      <h1>{chef.username}</h1>\n      <p>{chef.bio}</p>\n      <ul>\n        {chef.recipes != undefined ?chef.recipes.map((recipe)=>{\n          return <RecipeCard recipe={recipe}/>\n        }):null}\n      </ul>\n        \n        \n    </div>\n  );\n}\n else {return <p>loading</p>}\n}\n\nexport default ChefDetail;","import React, {useState} from 'react';\nimport {Form, Container, Button} from 'react-bootstrap';\nimport {useNavigate} from 'react-router-dom'\n\nfunction SignUp({onLogin}) {\n    const[firstName, setFirstName]=useState('')\n    const[lastName, setLastName]=useState('')\n    const[email, setEmail]=useState('')\n    const[username,setUsername]=useState('')\n    const[password,setPassword]=useState('')\n    const[passwordConfirmation,setPasswordConfirmation]=useState('')\n\n    const navigate = useNavigate()\n\n    function onSubmit(e){\n    e.preventDefault()\n    console.log('yeet')\n    fetch('/api/users',{\n        method: 'POST',\n        headers: {\"Content-Type\": 'application/json'},\n        body: JSON.stringify({\n        username: username,\n        password: password,\n        first_name: firstName,\n        last_name: lastName,\n        email: email,\n        password_confirmation: passwordConfirmation,\n        })})\n        .then(\n            res =>{\n                if(res.ok){\n                    res.json().then(user => onLogin(user))\n                }  \n            })\n            .then(navigate('/'))     \n    }\n\n  return (\n    <Container>\n      <Form className='signup' onSubmit={onSubmit}>  \n      <h1>Sign Up!</h1>\n        <Form.Group>\n          <Form.Label>first name: </Form.Label>\n          <Form.Control type='text' onChange={e => setFirstName(e.target.value)}></Form.Control>\n        </Form.Group>\n          <Form.Label>last name: </Form.Label>\n          <Form.Control type='text' onChange={e => setLastName(e.target.value)}></Form.Control>\n          <Form.Label>email: </Form.Label>\n          <Form.Control type='email' onChange={e => setEmail(e.target.value)}></Form.Control>\n          <Form.Label>username: </Form.Label>\n          <Form.Control type='text' onChange={e => setUsername(e.target.value)}></Form.Control>\n          <Form.Label>password: </Form.Label>\n          <Form.Control type='password' onChange={e => setPassword(e.target.value)}></Form.Control>\n        <Form.Group>\n          <Form.Label>confirm password: </Form.Label>\n          <Form.Control type='password' onChange={e => setPasswordConfirmation(e.target.value)}></Form.Control>\n        </Form.Group>\n        <Button type='signup'>sign up</Button>\n    </Form>\n\n    </Container>\n    \n    \n  );\n}\n\nexport default SignUp;","import React, {useState} from \"react\";\n\nfunction AddIngredient({addIngredient}){\n    const[ingredientName,setIngredientName]=useState('')\n    const[quantity,setQuantity]=useState('')\n    const[unit,setUnit]=useState('')\n    \n    \n    function handleAddIngredient(e){\n        e.preventDefault()\n        addIngredient(ingredientName, quantity, unit)\n    }\n    \n    return(\n        <div>\n            \n                <label>Ingredient: </label>\n                <input type=\"text\" onChange={(e)=>setIngredientName(e.target.value)}></input>\n                <label>Quantity:</label>\n                <input type=\"text\" onChange={(e)=>setQuantity(e.target.value)}></input>\n                <label>Unit:</label>\n                <input type='text' onChange={(e)=>setUnit(e.target.value)}></input>\n                <button type=\"submit\" onClick={handleAddIngredient}>Add Ingredient</button>\n                \n        </div>\n    );\n}\n\nexport default AddIngredient;","import React, {useState, useEffect}from 'react'\nimport {useNavigate} from 'react-router-dom'\nimport {Container, Form, Card} from 'react-bootstrap'\nimport AddIngredient from './AddIngredient'\n\nfunction RecipeCreate({recipes, setRecipes}){\n    \n    const[recipeName,setRecipeName]=useState('')\n    const[recipeIngredients,setRecipeIngredients]=useState([])\n    const[instructions,setInstructions]=useState('')\n    const navigate = useNavigate()\n    \n    function createRecipe(e){\n        e.preventDefault()\n        fetch('/api/recipes', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                name: recipeName,\n                recipe_ingredients: recipeIngredients,\n                instructions: instructions\n            }),\n        })\n        .then((res)=>{\n            if (res.ok){\n                navigate('/recipes') //once the recipe submit button and succesful creation of recipe navigate to recipe list\n                res.json().then((recipe)=> setRecipes([...recipes,recipe])) //updates recipes state so page rerenders with new recipe in the list\n            }\n        })\n        }\n    \n        function addIngredient(ingredientName,quantity,unit){\n            let ingredient = {ingredient:ingredientName, quantity:quantity, unit: unit}\n            let updatedIngredients = [...recipeIngredients,ingredient]\n            setRecipeIngredients(updatedIngredients)\n        }\n        console.log(recipeIngredients)\n    return (\n        <Container>\n            <Card>\n            <h1>Create New Recipe</h1>\n                <Form>\n                    \n                    <label>Recipe Name</label>\n                    <input type=\"text\" onChange={(e)=>setRecipeName(e.target.value)}></input>\n                </Form>\n            </Card>\n            <Card>\n                <Form>\n                    <h2>Ingredients</h2>\n                    <AddIngredient addIngredient={addIngredient}/>\n                    <ul>\n                    {recipeIngredients.length>0 && \n                        recipeIngredients.map((ingredient)=>{\n                            return <li key={ingredient.ingredient}>{ingredient.ingredient} {ingredient.quantity} {ingredient.unit}</li>\n                        }) \n                    }\n                    </ul>\n                </Form>\n            </Card>\n                <Card>\n                    <Form>\n                        <h2>Instructions</h2>\n                        <label>Cooking Instructions: </label>\n                        <textarea type='paragraph_text' cols='80' onChange={(e)=>setInstructions(e.target.value)}></textarea>\n                    </Form>\n                </Card>\n                \n            <button type='submit' onClick={createRecipe}>Submit Recipe</button>          \n        \n        </Container>\n    )\n}\n\nexport default RecipeCreate","import React, {useEffect, useState} from 'react';\nimport {Container, Button} from 'react-bootstrap'\nimport {useNavigate} from 'react-router-dom'\n\n\nfunction Account({currentUser, setCurrentUser}) {\n\nconst navigate = useNavigate()\n\nfunction deleteAccount(){\n    fetch(`/users/${currentUser.id}`,{\n        method: 'DELETE'\n    })\n    .then(res => {\n        if (res.ok){\n            setCurrentUser('')\n            navigate('/')\n        }\n    })\n    \n}\n\n    return(\n        <Container>\n            <h1>Welcome {currentUser.first_name}</h1>\n            <Button onClick={deleteAccount}>Delete Account</Button>\n\n        </Container>\n    )\n}\n\nexport default Account;","import React, {useEffect, useState} from 'react';\nimport {Routes, Route, useNavigate} from 'react-router-dom'\nimport '../App.css';\nimport Home from './Home'\nimport NavbarSide from './navigation/NavbarSide';\nimport Header from './Header'\nimport Login from './sessions/Login'\nimport RecipeList from './recipes/RecipeList'\nimport RecipeDetail from './recipes/RecipeDetail'\nimport ChefList from './users/ChefList'\nimport ChefDetail from './users/ChefDetail'\nimport SignUp from './sessions/SignUp'\nimport RecipeCreate from './recipes/RecipeCreate'\nimport Account from './users/Account'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Container,Row, Col} from 'react-bootstrap'\n\nfunction App() {\n  const [users, setUsers]=useState([])\n  const [recipes, setRecipes]=useState([])\n  const [currentUser, setCurrentUser] = useState('')\n  const navigate = useNavigate()\n\n  //initial fetch of data\n  useEffect(() =>{\n    fetch(\"/api/users\")\n    .then(res => res.json())\n    .then(data => setUsers(data))\n    .then(()=>fetch(\"/api/recipes\"))\n    .then(res => res.json())\n    .then(data=>setRecipes(data))\n  },[])\n  //check to see if the user is already logged in when page refreshes or they leave and revisit\n  useEffect(()=>{\n    fetch('/api/auth')\n    .then(res => {\n      if (res.ok){\n        res.json().then(user => setCurrentUser(user))\n      }\n    })\n  },[])\n  \n  function handleDeleteRecipe(e,recipeId){\n    e.preventDefault()\n    fetch(`/api/recipes/${recipeId}`,{\n      method: 'DELETE',\n    })\n    .then(res=>{\n      if (res.ok){\n        setRecipes(recipes.filter(r=> r.id != recipeId)) //r.id of type number while recipeId type string \n        navigate('/recipes')\n      }\n    })\n  }\n\n  return (\n    <div className=\"main\">\n      <Container>\n        <Row>\n          <Header currentUser={currentUser} setCurrentUser={setCurrentUser}/>\n        </Row> \n      </Container>\n      \n      <Container margin='10px'>\n        <Row>\n          <Col lg={3}>\n          <NavbarSide currentUser={currentUser}/>\n        </Col>\n        <Col lg={true}>\n          <Routes>\n            <Route path='/' element={<Home currentUser={currentUser} recipes={recipes} users={users}/>}/>\n            <Route path='/recipes' element={<RecipeList recipes={recipes}/>}/>\n            <Route path='/recipes/:id' element={<RecipeDetail currentUser={currentUser} handleDeleteRecipe={handleDeleteRecipe}/>}/>\n            <Route path='/chefs' element={<ChefList users={users}/>}/>\n            <Route path='/chefs/:id' element={<ChefDetail/>}/>\n            <Route path='/login' element={<Login onLogin={setCurrentUser}/>}/>\n            <Route path='/signup' element={<SignUp onLogin={setCurrentUser}/>}/>\n            <Route path='/recipes/create' element={<RecipeCreate recipes ={recipes} setRecipes={setRecipes}/>}/>\n            <Route path='/account' element={<Account currentUser={currentUser} setCurrentUser={setCurrentUser}/>}/>\n          </Routes>\n          </Col>\n        </Row>\n      </Container>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}